name: Fix SmartNews Feed

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

jobs:
  update-feed:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install lxml requests beautifulsoup4

      - name: Fetch and fix SmartNews feed
        run: |
          # Download the original RSS feed
          curl -sSL "https://www.cabletv.com/blog/category/entertainment/feed" -o original.xml

          python3 <<'EOF'
          from lxml import etree
          from bs4 import BeautifulSoup

          SNF_NS = "http://www.smartnews.be/snf"
          MEDIA_NS = "http://search.yahoo.com/mrss/"
          CONTENT_NS = "http://purl.org/rss/1.0/modules/content/"

          parser = etree.XMLParser(strip_cdata=False)
          tree = etree.parse("original.xml", parser)
          root = tree.getroot()

          # Ensure SmartNews namespace exists
          if "snf" not in root.nsmap:
              nsmap = root.nsmap.copy()
              nsmap["snf"] = SNF_NS
              new_root = etree.Element(root.tag, nsmap=nsmap)
              for attr, val in root.attrib.items():
                  new_root.set(attr, val)
              for child in root:
                  new_root.append(child)
              root = new_root
              tree._setroot(root)

          channel = root.find("channel")
          if channel is None:
              raise ValueError("No <channel> element found in feed")

          # --- Add SmartNews logo ---
          logo_url = "https://raw.githubusercontent.com/WatchCTV/SmartNews/main/CableTV.com%20RSS%20Logo%20Header.png"
          old_logo = channel.find("snf:logo", {"snf": SNF_NS})
          if old_logo is not None:
              channel.remove(old_logo)

          logo_el = etree.Element(f"{{{SNF_NS}}}logo")
          url_el = etree.SubElement(logo_el, "url")
          url_el.text = logo_url
          channel.append(logo_el)

          # --- Add media:thumbnail using more reliable logic ---
          for item in channel.findall("item"):
              media_thumb = item.find("media:thumbnail", {"media": MEDIA_NS})
              if media_thumb is not None:
                  continue

              html = (item.findtext("description") or "") + (item.findtext(f"{{{CONTENT_NS}}}encoded") or "")
              soup = BeautifulSoup(html, "html.parser")

              # Try featured image first
              img = soup.select_one("img.wp-post-image") \
                    or soup.select_one('a[data-element="Image"] > img') \
                    or soup.find("img")

              if img and img.get("src"):
                  thumb_url = img["src"].strip()
                  thumb_el = etree.Element(f"{{{MEDIA_NS}}}thumbnail")
                  thumb_el.set("url", thumb_url)
                  item.append(thumb_el)

          tree.write("feed.xml", encoding="utf-8", xml_declaration=True)
          EOF

      - name: Commit and push updated feed
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add feed.xml
          git diff-index --quiet HEAD || git commit -m "Auto-update SmartNews feed (logo + featured thumbnails)"
          git push
