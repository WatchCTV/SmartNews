name: Build SmartNews Feed

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # runs daily at 6 AM UTC (11 PM MT previous day)
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare repository
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git rebase origin/main || echo "No rebase needed"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pytz feedparser

      - name: Normalize SmartNews feed
        run: |
          python3 - <<'EOF'
          import datetime, pytz, xml.etree.ElementTree as ET, os, urllib.parse

          FEED_FILE = "feed.xml"
          MTN = pytz.timezone("US/Mountain")
          now = datetime.datetime.now(MTN)

          if not os.path.exists(FEED_FILE):
              raise FileNotFoundError(f"{FEED_FILE} not found")

          ET.register_namespace("snf", "http://www.smartnews.be/snf")
          tree = ET.parse(FEED_FILE)
          root = tree.getroot()

          for item in root.findall(".//item"):
              # --- pubDate ---
              pub = item.find("pubDate")
              if pub is not None:
                  text = (pub.text or "").strip()
                  try:
                      dt = datetime.datetime.strptime(text, "%B %d, %Y")
                      dt = MTN.localize(dt.replace(hour=0, minute=0))
                      pub.text = dt.strftime("%a, %d %b %Y %H:%M:%S %z")
                  except Exception:
                      pass
              else:
                  pub = ET.SubElement(item, "pubDate")
                  pub.text = now.strftime("%a, %d %b %Y %H:%M:%S %z")

              # --- snf:analytics ---
              ns = {"snf": "http://www.smartnews.be/snf"}
              analytics = item.find("snf:analytics", ns)
              if analytics is None:
                  link_el = item.find("link")
                  if link_el is not None and link_el.text:
                      encoded_url = urllib.parse.quote(link_el.text.strip(), safe="")
                      tracking = (
                          f"https://www.cabletv.com/tracking?"
                          f"source=smartnews&utm_medium=feed&utm_url={encoded_url}"
                      )
                      analytics = ET.SubElement(
                          item, "{http://www.smartnews.be/snf}analytics"
                      )
                      analytics.text = tracking

          tree.write(FEED_FILE, encoding="utf-8", xml_declaration=True)
          EOF

      - name: Commit & Push
        run: |
          git add feed.xml
          git commit -m "Normalize SmartNews feed (RFC-822 pubDate UTC-7 + snf:analytics)" || echo "No changes to commit"
          git push origin main
