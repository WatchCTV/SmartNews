name: Fix SmartNews Feed
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'
jobs:
  update-feed:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Install lxml
        run: pip install lxml --break-system-packages
      
      - name: Fix feed
        run: |
          curl -sSL "https://www.cabletv.com/blog/category/entertainment/feed" -o feed.xml
          
          python3 <<'EOF'
          from lxml import etree
          import re
          
          parser = etree.XMLParser(strip_cdata=False)
          tree = etree.parse("feed.xml", parser)
          root = tree.getroot()
          
          # Define namespaces
          ns = {
              'content': 'http://purl.org/rss/1.0/modules/content/',
              'snf': 'http://www.smartnews.be/snf',
              'media': 'http://search.yahoo.com/mrss/'
          }
          
          # Add namespaces to root
          for prefix, uri in ns.items():
              root.attrib[f'{{{etree.QName(root).namespace}}}xmlns:{prefix}' if etree.QName(root).namespace else f'xmlns:{prefix}'] = uri
          
          channel = root.find('channel')
          
          # Add logo
          desc = channel.find('description')
          desc_index = list(channel).index(desc)
          logo = etree.Element(f'{{{ns["snf"]}}}logo')
          logo.text = 'https://raw.githubusercontent.com/WatchCTV/SmartNews/main/CTV-Feed-Logo.png'
          channel.insert(desc_index + 1, logo)
          
          # Process items
          for item in channel.findall('item'):
              # Add thumbnail
              thumb = etree.Element(f'{{{ns["media"]}}}thumbnail')
              thumb.set('url', 'https://raw.githubusercontent.com/WatchCTV/SmartNews/main/CTV-Feed-Logo.png')
              item.insert(0, thumb)
              
              # Fix content:encoded with CDATA
              content = item.find(f'{{{ns["content"]}}}encoded')
              if content is not None:
                  text = content.text if content.text else ''
                  # Limit links
                  links = re.findall(r'<a[^>]*href="[^"]*"[^>]*>.*?</a>', text, re.DOTALL)
                  if len(links) > 3:
                      for link in links[3:]:
                          match = re.search(r'>([^<]+)<', link)
                          if match:
                              text = text.replace(link, match.group(1), 1)
                  
                  # Clear and set as CDATA
                  content.text = etree.CDATA(text)
              
              # Add analytics with CDATA
              link = item.find('link')
              if link is not None and link.text:
                  analytics = etree.Element(f'{{{ns["snf"]}}}analytics')
                  analytics.text = etree.CDATA(link.text)
                  item.append(analytics)
          
          # Write with CDATA preserved
          tree.write('feed.xml', encoding='utf-8', xml_declaration=True, pretty_print=False)
          EOF
      
      - name: Commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add feed.xml
          git diff --quiet --staged || git commit -m "Update feed"
          git push
