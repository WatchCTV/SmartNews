name: Build SmartNews Feed

on:
  schedule:
    - cron: "0 * * * *" # hourly
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests lxml beautifulsoup4 feedgen

      - name: Generate SmartNews Feed
        run: |
          python - <<'EOF'
          import requests
          from bs4 import BeautifulSoup
          from feedgen.feed import FeedGenerator
          from datetime import datetime
          import email.utils as eut

          # --- CONFIG ---
          SOURCE_FEED = "https://rss.app/feeds/PnXLTXpDQSdLv1cb.xml"
          LOGO_URL = "https://i.ibb.co/sptKgp34/CTV-Feed-Logo.png"
          OUTPUT_FILE = "feed.xml"

          # --- FETCH ORIGINAL FEED ---
          res = requests.get(SOURCE_FEED)
          soup = BeautifulSoup(res.content, "xml")

          # --- CREATE NEW FEED ---
          fg = FeedGenerator()
          fg.load_extension('dc')
          fg.load_extension('content')
          fg.load_extension('media')

          fg.title("Entertainment News")
          fg.link(href="https://www.cabletv.com/blog/category/entertainment", rel="alternate")
          fg.description("Let's start watching! CableTV.com keeps you informed of all entertainment news.")
          fg.logo(LOGO_URL)
          fg.id("https://watchctv.github.io/SmartNews/feed.xml")

          for item in soup.find_all("item"):
              title = item.title.text if item.title else "No title"
              link = item.link.text if item.link else ""
              guid = item.guid.text if item.guid else link
              pub_raw = item.pubDate.text if item.pubDate else datetime.utcnow().strftime("%a, %d %b %Y %H:%M:%S GMT")
              pub_date = eut.format_datetime(datetime.strptime(pub_raw[:25], "%a, %d %b %Y %H:%M:%S"))

              desc = item.description.text if item.description else ""
              thumb = ""
              img_tag = BeautifulSoup(desc, "html.parser").find("img")
              if img_tag and img_tag.get("src"):
                  thumb = img_tag["src"]

              author = item.find("dc:creator").text if item.find("dc:creator") else "CableTV.com Editorial Team"

              entry = fg.add_entry()
              entry.id(guid)
              entry.title(title)
              entry.link(href=link)
              entry.pubDate(pub_date)
              entry.dc.creator(author)
              entry.author({'name': author})
              entry.description(desc)
              entry.content(desc, type="CDATA")

              if thumb:
                  entry.media.thumbnail({'url': thumb})

          fg.rss_file(OUTPUT_FILE)
          EOF

      - name: Commit and push feed.xml
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add feed.xml
          git commit -m "Update SmartNews feed" || echo "No changes to commit"
          git push
