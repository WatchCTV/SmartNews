name: Fix SmartNews Feed

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours

jobs:
  update-feed:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install lxml requests

      - name: Fetch and fix SmartNews feed
        run: |
          # Download the original RSS feed
          curl -sSL "https://www.cabletv.com/blog/category/entertainment/feed" -o original.xml

          python3 <<'EOF'
          from lxml import etree

          SNF_NS = "http://www.smartnews.be/snf"
          parser = etree.XMLParser(strip_cdata=False)
          tree = etree.parse("original.xml", parser)
          root = tree.getroot()

          # --- Ensure SmartNews namespace exists ---
          if "snf" not in root.nsmap:
              nsmap = root.nsmap.copy()
              nsmap["snf"] = SNF_NS
              new_root = etree.Element(root.tag, nsmap=nsmap)
              # Copy attributes
              for attr, val in root.attrib.items():
                  new_root.set(attr, val)
              # Copy children
              for child in root:
                  new_root.append(child)
              root = new_root
              tree._setroot(root)

          # --- Modify <channel> section ---
          channel = root.find("channel")
          if channel is None:
              raise ValueError("No <channel> element found in feed")

          def add_logo(tag, url):
              """Creates <snf:logo><url>...</url></snf:logo>"""
              el = etree.Element(f"{{{SNF_NS}}}{tag}")
              url_el = etree.SubElement(el, "url")
              url_el.text = url
              return el

          logo_url = "https://www.cabletv.com/images/CTV-Feed-Logo.png"
          dark_logo_url = "https://www.cabletv.com/images/CTV-Feed-Logo-Dark.png"

          # Remove any existing SmartNews logos
          for tag in ["snf:logo", "snf:darkModeLogo"]:
              old = channel.find(tag, {"snf": SNF_NS})
              if old is not None:
                  channel.remove(old)

          # Append new logos
          channel.append(add_logo("logo", logo_url))
          channel.append(add_logo("darkModeLogo", dark_logo_url))

          # --- Save updated feed ---
          tree.write("feed.xml", encoding="utf-8", xml_declaration=True)
          EOF

      - name: Commit and push updated feed
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add feed.xml
          git diff-index --quiet HEAD || git commit -m "Auto-update SmartNews feed"
          git push
