- name: Fetch and fix SmartNews feed
  run: |
    curl -sSL "https://www.cabletv.com/blog/category/entertainment/feed" -o original.xml

    python3 <<'EOF'
    from lxml import etree
    from bs4 import BeautifulSoup

    SNF_NS = "http://www.smartnews.be/snf"
    MEDIA_NS = "http://search.yahoo.com/mrss/"
    CONTENT_NS = "http://purl.org/rss/1.0/modules/content/"

    parser = etree.XMLParser(strip_cdata=False)
    tree = etree.parse("original.xml", parser)
    root = tree.getroot()

    if "snf" not in root.nsmap:
        nsmap = root.nsmap.copy()
        nsmap["snf"] = SNF_NS
        new_root = etree.Element(root.tag, nsmap=nsmap)
        for attr, val in root.attrib.items():
            new_root.set(attr, val)
        for child in root:
            new_root.append(child)
        root = new_root
        tree._setroot(root)

    channel = root.find("channel")
    if channel is None:
        raise ValueError("No <channel> element found in feed")

    # --- Add SmartNews logo ---
    logo_url = "https://raw.githubusercontent.com/WatchCTV/SmartNews/main/CableTV.com%20RSS%20Logo%20Header.png"
    old_logo = channel.find("snf:logo", {"snf": SNF_NS})
    if old_logo is not None:
        channel.remove(old_logo)
    logo_el = etree.Element(f"{{{SNF_NS}}}logo")
    url_el = etree.SubElement(logo_el, "url")
    url_el.text = logo_url
    channel.append(logo_el)

    # --- Add thumbnails ---
    for item in channel.findall("item"):
        media_thumb = item.find("media:thumbnail", {"media": MEDIA_NS})
        if media_thumb is not None:
            continue

        html = (item.findtext("description") or "") + (item.findtext(f"{{{CONTENT_NS}}}encoded") or "")
        soup = BeautifulSoup(html, "html.parser")

        img = soup.select_one('a[data-element="Image"] > img') or soup.find("img")
        if img and img.get("src"):
            thumb_url = img["src"].strip()
            thumb_el = etree.Element(f"{{{MEDIA_NS}}}thumbnail")
            thumb_el.set("url", thumb_url)
            item.append(thumb_el)

    tree.write("feed.xml", encoding="utf-8", xml_declaration=True)
    EOF
